{
  "name": "Codecs",
  "description": "Codec Types",
  "entries": [
    {
      "fourcc": "encs",
      "description": "Encrypted Systems stream",
      "type": "MP4VisualSampleEntry",
      "containers": ["stsd"],
      "syntax": "System streams are defined in ISO/IEC 14496-14"
    },
    {
      "fourcc": "enca",
      "description": "Encrypted/Protected audio",
      "type": "AudioSampleEntry",
      "containers": ["stsd"],
      "syntax": "class AudioSampleEntry(codingname) extends SampleEntry (codingname){\n\tconst unsigned int(32)[2] reserved = 0;\n\tunsigned int(16) channelcount;\n\ttemplate unsigned int(16) samplesize = 16;\n\tunsigned int(16) pre_defined = 0;\n\tconst unsigned int(16) reserved = 0 ;\n\ttemplate unsigned int(32) samplerate = { default samplerate of media}<<16;\n\t// optional boxes follow\n\tBox ();\t\t// further boxes as needed\n\tChannelLayout();\n\tDownMixInstructions() [];\n\tDRCCoefficientsBasic() [];\n\tDRCInstructionsBasic() [];\n\tDRCCoefficientsUniDRC() [];\n\tDRCInstructionsUniDRC() [];\n\t// we permit only one DRC Extension box:\n\tUniDrcConfigExtension();\n\t// optional boxes follow\n\tSamplingRateBox();\n\tChannelLayout();\n}\n\nclass AudioSampleEntryV1(codingname) extends SampleEntry (codingname){\n\tunsigned int(16) entry_version;\t// shall be 1, \n\t// and shall be in an stsd with version ==1\n\tconst unsigned int(16)[3] reserved = 0;\n\ttemplate unsigned int(16) channelcount;\t// shall be correct\n\ttemplate unsigned int(16) samplesize = 16;\n\tunsigned int(16) pre_defined = 0;\n\tconst unsigned int(16) reserved = 0 ;\n\ttemplate unsigned int(32) samplerate = 1<<16;\n\t// optional boxes follow\n\tSamplingRateBox();\n\tBox ();\t\t// further boxes as needed\n\tChannelLayout();\n\tDownMixInstructions() [];\n\tDRCCoefficientsBasic() [];\n\tDRCInstructionsBasic() [];\n\tDRCCoefficientsUniDRC() [];\n\tDRCInstructionsUniDRC() [];\n\t// we permit only one DRC Extension box:\n\tUniDrcConfigExtension();\n\t// optional boxes follow\n\tChannelLayout();\n}"
    },
    {
      "fourcc": "enca",
      "description": "Encrypted/Protected audio",
      "type": "AudioSampleEntryV1",
      "containers": ["stsd"],
      "syntax": "class AudioSampleEntryV1(codingname) extends SampleEntry (codingname){\r\n\tunsigned int(16) entry_version;\t// shall be 1, \r\n\t\t\t\t\t\t\t// and shall be in an stsd with version ==1\r\n\tconst unsigned int(16)[3] reserved = 0;\r\n\ttemplate unsigned int(16) channelcount;\t// shall be correct\r\n\ttemplate unsigned int(16) samplesize = 16;\r\n\tunsigned int(16) pre_defined = 0;\r\n\tconst unsigned int(16) reserved = 0 ;\r\n\ttemplate unsigned int(32) samplerate = 1<<16;\r\n\t// optional boxes follow\r\n\tSamplingRateBox();\r\n\tBox ();\t\t// further boxes as needed\r\n\tChannelLayout();\r\n\tDownMixInstructions() [];\r\n\tDRCCoefficientsBasic() [];\r\n\tDRCInstructionsBasic() [];\r\n\tDRCCoefficientsUniDRC() [];\r\n\tDRCInstructionsUniDRC() [];\r\n\t// we permit only one DRC Extension box:\r\n\tUniDrcConfigExtension();\r\n\t// optional boxes follow\r\n\tChannelLayout();\r\n}"
    },
    {
      "fourcc": "encf",
      "description": "Encrypted/Protected font",
      "type": "FontSampleEntry",
      "containers": ["stsd"],
      "syntax": "class FontSampleEntry(codingname) extends SampleEntry (codingname){\n\t//other boxes from derived specifications\n}"
    },
    {
      "fourcc": "encm",
      "description": "Encrypted/Protected metadata",
      "type": "MetaDataSampleEntry",
      "containers": ["stsd"],
      "syntax": "class MetaDataSampleEntry(codingname) extends SampleEntry (codingname) {\r\n}"
    },
    {
      "fourcc": "enct",
      "description": "Encrypted Text",
      "type": "PlainTextSampleEntry",
      "containers": ["stsd"],
      "syntax": ""
    },
    {
      "fourcc": "encv",
      "description": "Encrypted/protected video",
      "type": "VisualSampleEntry",
      "containers": ["stsd"],
      "syntax": "SampleEntry('encv') {\n\tProtectionSchemeInfoBox {\n\t\tOriginalFormatBox;\t// data_format is 'resv'\n\t\tSchemeTypeBox;\n\t\tSchemeInformationBox;\n\t}\n\tRestrictedSchemeInfoBox {\n\t\tOriginalFormatBox; // data_format indicates a codec, e.g. 'avc1'\n\t\tSchemeTypeBox;\n\t\tSchemeInformationBox;\n\t}\n\t// Boxes specific to the untransformed sample entry type\n\t// For 'avc1', these would include AVCConfigurationBox\n}"
    },
    {
      "fourcc": "metx",
      "description": "XML timed metadata",
      "type": "XMLMetaDataSampleEntry",
      "containers": ["stsd"],
      "syntax": "class XMLMetaDataSampleEntry() extends MetaDataSampleEntry ('metx') {\n\tutf8string content_encoding; // optional\n\tutf8list namespace;\n\tutf8list schema_location; // optional\n}"
    },
    {
      "fourcc": "mett",
      "description": "Text timed metadata that is not XML",
      "type": "TextMetaDataSampleEntry",
      "containers": ["stsd"],
      "syntax": "class TextMetaDataSampleEntry() extends MetaDataSampleEntry ('mett') {\n\tutf8string content_encoding; // optional\n\tutf8string mime_format;\n\tTextConfigBox (); // optional\n}"
    },
    {
      "fourcc": "urim",
      "description": "Binary timed metadata identified by URI",
      "type": "URIMetaSampleEntry",
      "containers": ["stsd"],
      "syntax": "class URIMetaSampleEntry() extends MetaDataSampleEntry ('urim') {\n\tURIbox\t\t\tthe_label;\n\tURIInitBox\t\tinit;\t\t// optional\n}"
    },
    {
      "fourcc": "mebx",
      "description": "Timed metadata multiplex",
      "type": "BoxedMetadataSampleEntry",
      "containers": ["stsd"],
      "syntax": "aligned(8) class BoxedMetadataSampleEntry \n\textends MetadataSampleEntry ('mebx') {\n\tMetadataKeyTableBox();\t\t\t\t// mandatory\n\tBitRateBox ();\t\t\t\t\t\t\t// optional\n}"
    },
    {
      "fourcc": "fdp ",
      "description": "File delivery hints",
      "type": "FDHintSampleEntry",
      "containers": ["stsd"],
      "syntax": "class FDHintSampleEntry() extends HintSampleEntry ('fdp ') {\n\tunsigned int(16)\thinttrackversion = 1;\n\tunsigned int(16)\thighestcompatibleversion = 1;\n\tunsigned int(16)\tpartition_entry_ID;\n\tunsigned int(16)\tFEC_overhead;\n}"
    },
    {
      "fourcc": "icpv",
      "description": "Incomplete video",
      "type": "IncompleteAVCSampleEntry",
      "containers": ["stsd"],
      "syntax": "class IncompleteAVCSampleEntry() extends VisualSampleEntry ('icpv'){\n\tCompleteTrackInfoBox();\n\tAVCConfigurationBox config;\n}"
    },
    {
      "fourcc": "pm2t",
      "description": "Protected MPEG-2 Transport",
      "type": "ProtectedMPEG2TransportStreamSampleEntry",
      "containers": ["stsd"],
      "syntax": "class ProtectedMPEG2TransportStreamSampleEntry\n\textends MPEG2TSSampleEntry('pm2t') {\n\tProtectionSchemeInfoBox\t\tSchemeInformation;\n}"
    },
    {
      "fourcc": "prtp",
      "description": "Protected RTP Reception",
      "type": "ProtectedRtpReceptionHintSampleEntry",
      "containers": ["stsd"],
      "syntax": "Class ProtectedRtpReceptionHintSampleEntry\n\textends RtpReceptionHintSampleEntry ('prtp') {\n\tProtectionSchemeInfoBox\t\tSchemeInformation;\n}"
    },
    {
      "fourcc": "rm2t",
      "description": "MPEG-2 Transport Reception",
      "type": "MPEG2TSReceptionSampleEntry",
      "containers": ["stsd"],
      "syntax": "class MPEG2TSReceptionSampleEntry extends MPEG2TSSampleEntry('rm2t') {}"
    },
    {
      "fourcc": "rrtp",
      "description": "RTP reception",
      "type": "ReceivedRtpHintSampleEntry",
      "containers": ["stsd"],
      "syntax": "class ReceivedRtpHintSampleEntry() extends HintSampleEntry ('rrtp') {\n\tuint(16)\t\thinttrackversion = 1;\n\tuint(16)\t\thighestcompatibleversion = 1;\n\tuint(32)\t\tmaxpacketsize;\n}"
    },
    {
      "fourcc": "rsrp",
      "description": "SRTP Reception",
      "type": "ReceivedSrtpHintSampleEntry",
      "containers": ["stsd"],
      "syntax": "class ReceivedSrtpHintSampleEntry() extends HintSampleEntry ('rsrp') {\n\tuint(16)\t\thinttrackversion = 1;\n\tuint(16)\t\thighestcompatibleversion = 1;\n\tuint(32)\t\tmaxpacketsize;\n}"
    },
    {
      "fourcc": "rtcp",
      "description": "RTCP reception hint track",
      "type": "HintSampleEntry",
      "containers": ["stsd"],
      "syntax": "class HintSampleEntry() extends SampleEntry (protocol) {\n}"
    },
    {
      "fourcc": "rtp ",
      "description": "RTP Hints",
      "type": "HintSampleEntry",
      "containers": ["stsd"],
      "syntax": "aligned(8) class moviehintinformation extends Box('hnti') {\n}\n\naligned(8) class rtpmoviehintinformation extends Box('rtp ') {\n\tuint(32) descriptionformat = 'sdp ';\n\tchar  sdptext[];\n}"
    },
    {
      "fourcc": "sbtt",
      "description": "Text subtitles",
      "type": "TextSubtitleSampleEntry",
      "containers": ["stsd"],
      "syntax": "class TextSubtitleSampleEntry() extends SubtitleSampleEntry ('sbtt') {\n\tutf8string content_encoding; // optional\n\tutf8string mime_format;\n\tTextConfigBox (); // optional\n}"
    },
    {
      "fourcc": "sm2t",
      "description": "MPEG-2 Transport Server",
      "type": "MPEG2TSServerSampleEntry",
      "containers": ["stsd"],
      "syntax": "class MPEG2TSServerSampleEntry extends MPEG2TSSampleEntry('sm2t') {}"
    },
    {
      "fourcc": "srtp",
      "description": "SRTP Hints",
      "type": "SrtpHintSampleEntry",
      "containers": ["stsd"],
      "syntax": "class SrtpHintSampleEntry() extends HintSampleEntry ('srtp') {\n\tuint(16)\t\thinttrackversion = 1;\n\tuint(16)\t\thighestcompatibleversion = 1;\n\tuint(32)\t\tmaxpacketsize;\n}"
    },
    {
      "fourcc": "stcp",
      "description": "SRTCP reception hint track",
      "type": "HintSampleEntry",
      "containers": ["stsd"],
      "syntax": ""
    },
    {
      "fourcc": "stpp",
      "description": "Subtitles (Timed Text)",
      "type": "XMLSubtitleSampleEntry",
      "containers": ["stsd"],
      "syntax": "class XMLSubtitleSampleEntry() extends SubtitleSampleEntry ('stpp') {\n\tutf8list namespace;\n\tutf8list schema_location; // optional\n\tutf8list auxiliary_mime_types;\n\t\t\t\t// optional, required if auxiliary resources are present\n}"
    },
    {
      "fourcc": "stxt",
      "description": "Simple timed text",
      "type": "SimpleTextSampleEntry",
      "containers": ["stsd"],
      "syntax": "class SimpleTextSampleEntry extends PlainTextSampleEntry ('stxt') {\n\tutf8string\tcontent_encoding;\t// optional\n\tutf8string\tmime_format; \n\tTextConfigBox ();\t\t\t\t\t// optional\n}"
    },
    {
      "fourcc": "encu",
      "description": "Encrypted/Protected subtitles",
      "type": "PlainTextSampleEntry",
      "containers": ["stsd"],
      "syntax": ""
    },
    {
      "fourcc": "encp",
      "description": "Encrypted/Protected haptics",
      "type": "HapticSampleEntry",
      "containers": ["stsd"],
      "syntax": "aligned(8) class HapticSampleEntry(codingname)\n\textends SampleEntry(codingname) {\n\tBox()[]\totherboxes;\n}"
    },
    {
      "fourcc": "enc3",
      "description": "Encrypted/Protected volumetric visual",
      "type": "VolumetricVisualSampleEntry",
      "containers": ["stsd"],
      "syntax": "class VolumetricVisualSampleEntry(codingname) \n\textends SampleEntry (codingname){\n\tunsigned int(8)[32] compressorname;\n\t// other boxes from derived specifications\n}"
    },
    {
      "fourcc": "resv",
      "description": "Restricted video",
      "type": "RestrictedSampleEntry",
      "containers": ["stsd"],
      "syntax": "class VisualSampleEntry('resv') extends SampleEntry ('resv'){\r\n\tunsigned int(16) pre_defined = 0;\r\n\tconst unsigned int(16) reserved = 0;\r\n\tunsigned int(32)[3]\tpre_defined = 0;\r\n\tunsigned int(16)\twidth;\r\n\tunsigned int(16)\theight;\r\n\ttemplate unsigned int(32)\thorizresolution = 0x00480000;\t// 72 dpi\r\n\ttemplate unsigned int(32)\tvertresolution  = 0x00480000;\t// 72 dpi\r\n\tconst unsigned int(32)\treserved = 0;\r\n\ttemplate unsigned int(16)\tframe_count = 1;\r\n\tuint(8)[32]\tcompressorname;\r\n\ttemplate unsigned int(16)\tdepth = 0x0018;\r\n\tint(16)\tpre_defined = -1;\r\n\t// other boxes from derived specifications\r\n\tCleanApertureBox\t\t\tclap;\t\t// optional\r\n\tPixelAspectRatioBox\t\tpasp;\t\t// optional\r\n}\r\n"
    },
    {
      "fourcc": "resa",
      "description": "Restricted audio",
      "type": "AudioSampleEntry",
      "containers": ["stsd"],
      "syntax": "class AudioSampleEntry(codingname) extends SampleEntry (codingname){\r\n\tconst unsigned int(32)[2] reserved = 0;\r\n\tunsigned int(16) channelcount;\r\n\ttemplate unsigned int(16) samplesize = 16;\r\n\tunsigned int(16) pre_defined = 0;\r\n\tconst unsigned int(16) reserved = 0 ;\r\n\ttemplate unsigned int(32) samplerate = { default samplerate of media}<<16;\r\n\t// optional boxes follow\r\n\tBox ();\t\t// further boxes as needed\r\n\tChannelLayout();\r\n\tDownMixInstructions() [];\r\n\tDRCCoefficientsBasic() [];\r\n\tDRCInstructionsBasic() [];\r\n\tDRCCoefficientsUniDRC() [];\r\n\tDRCInstructionsUniDRC() [];\r\n\t// we permit only one DRC Extension box:\r\n\tUniDrcConfigExtension();\r\n\t// optional boxes follow\r\n\tSamplingRateBox();\r\n\tChannelLayout();\r\n}"
    },
    {
      "fourcc": "resa",
      "description": "Restricted audio",
      "type": "AudioSampleEntryV1",
      "containers": ["stsd"],
      "syntax": "class AudioSampleEntryV1(codingname) extends SampleEntry (codingname){\r\n\tunsigned int(16) entry_version;\t// shall be 1, \r\n\t\t\t\t\t\t\t// and shall be in an stsd with version ==1\r\n\tconst unsigned int(16)[3] reserved = 0;\r\n\ttemplate unsigned int(16) channelcount;\t// shall be correct\r\n\ttemplate unsigned int(16) samplesize = 16;\r\n\tunsigned int(16) pre_defined = 0;\r\n\tconst unsigned int(16) reserved = 0 ;\r\n\ttemplate unsigned int(32) samplerate = 1<<16;\r\n\t// optional boxes follow\r\n\tSamplingRateBox();\r\n\tBox ();\t\t// further boxes as needed\r\n\tChannelLayout();\r\n\tDownMixInstructions() [];\r\n\tDRCCoefficientsBasic() [];\r\n\tDRCInstructionsBasic() [];\r\n\tDRCCoefficientsUniDRC() [];\r\n\tDRCInstructionsUniDRC() [];\r\n\t// we permit only one DRC Extension box:\r\n\tUniDrcConfigExtension();\r\n\t// optional boxes follow\r\n\tChannelLayout();\r\n}"
    },
    {
      "fourcc": "resm",
      "description": "Restricted metadata",
      "type": "MetaDataSampleEntry",
      "containers": ["stsd"],
      "syntax": "class MetaDataSampleEntry(codingname) extends SampleEntry (codingname) {\r\n}"
    },
    {
      "fourcc": "rest",
      "description": "Restricted text",
      "type": "SimpleTextSampleEntry",
      "containers": ["stsd"],
      "syntax": "TODO: Syntax from ISOBMFF Table 8 seems to refer to wrong SampleEntry class. It should be PlainTextSampleEntry"
    },
    {
      "fourcc": "resu",
      "description": "Restricted subtitle",
      "type": "XMLSubitleSampleEntry",
      "containers": ["stsd"],
      "syntax": "TODO: Probably it should be SubtitleSampleEntry"
    },
    {
      "fourcc": "ress",
      "description": "Restricted system",
      "type": "MP4VisualSampleEntry",
      "containers": ["stsd"],
      "syntax": "System streams are defined in ISO/IEC 14496-14"
    },
    {
      "fourcc": "resf",
      "description": "Restricted font",
      "type": "FontSampleEntry",
      "containers": ["stsd"],
      "syntax": "class FontSampleEntry(codingname) extends SampleEntry (codingname){\r\n\t//other boxes from derived specifications\r\n}"
    },
    {
      "fourcc": "resp",
      "description": "Restricted haptics",
      "type": "HapticSampleEntry",
      "containers": ["stsd"],
      "syntax": "aligned(8) class HapticSampleEntry(codingname)\r\n\textends SampleEntry(codingname) {\r\n\tBox()[]\totherboxes;\r\n}"
    },
    {
      "fourcc": "res3",
      "description": "Restricted volumteric visual",
      "type": "VolumetricVisualSampleEntry",
      "containers": ["stsd"],
      "syntax": "class VolumetricVisualSampleEntry(codingname) \r\n\textends SampleEntry (codingname){\r\n\tunsigned int(8)[32] compressorname;\r\n\t// other boxes from derived specifications\r\n}"
    },
    {
      "fourcc": "rtp ",
      "description": "RTP Hints",
      "containers": ["stsd"],
      "type": "RtpHintSampleEntry",
      "syntax": "class RtpHintSampleEntry() extends HintSampleEntry ('rtp ') {\n\tuint(16)\t\thinttrackversion = 1;\n\tuint(16)\t\thighestcompatibleversion = 1;\n\tuint(32)\t\tmaxpacketsize;\n}"
    }
  ]
}
