{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Schema for standard JSON format",
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "description": "Name of the type of entries in this file. For example, 'Boxes' or 'Sample Groups'."
    },
    "description": {
      "type": "string",
      "description": "Description of the type of entries in this file. For example, 'Boxes are the basic unit of data in the ISO Base Media File Format.'"
    },
    "entries": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "fourcc": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "containers": {
            "type": "array",
            "items": {
              "anyOf": [
                { "type": "string", "description": "fourcc or type" },
                {
                  "type": "object",
                  "patternProperties": {
                    "^.*$": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "fourcc"
                      },
                      "description": "type"
                    }
                  },
                  "additionalProperties": false,
                  "maxProperties": 1
                }
              ]
            },
            "minItems": 1,
            "description": "All the possible containers for this entry. If the element is a string then it is treated as fourcc or type. Otherwise if an object is provided then the only key in it will be treated as type and the items in that array will be treated as fourccs. The latter form will be used to differentiate between different types of containers that have the same fourcc."
          },
          "syntax": {
            "oneOf": [
              {
                "type": "string",
                "minLength": 1
              },
              { "type": "null" }
            ],
            "description": "The full syntax of this entry, as specified in the standard."
          },
          "versions": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "flags": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string",
                      "pattern": "^0x[0-9A-F]+$"
                    },
                    "description": {
                      "type": "string"
                    }
                  },
                  "required": ["name", "value", "description"]
                },
                {
                  "type": "object",
                  "properties": {
                    "wildcard": {
                      "type": "string",
                      "oneOf": [
                        {
                          "enum": ["any"]
                        }
                      ]
                    }
                  },
                  "required": ["wildcard"]
                }
              ]
            }
          }
        },
        "required": ["fourcc", "description", "type", "containers", "syntax"]
      },
      "minItems": 1
    }
  },
  "required": ["name", "description", "entries"]
}
