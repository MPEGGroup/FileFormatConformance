{
  "description": "Sample group types",
  "entries": [
    {
      "fourcc": "alst",
      "description": "Alternative startup sequence",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class AlternativeStartupEntry() extends VisualSampleGroupEntry ('alst')\n{\n\tunsigned int(16) roll_count;\n\tunsigned int(16) first_output_sample;\n\tfor (i=1; i <= roll_count; i++)\n\t\tunsigned int(32) sample_offset[i];\n\tj=1;\n\tdo { // optional, until the end of the structure\n\t\tunsigned int(16) num_output_samples[j];\n\t\tunsigned int(16) num_total_samples[j];\n\t\tj++;\n\t}\n}"
    },
    {
      "fourcc": "drap",
      "description": "Dependent random access point",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class VisualDRAPEntry() \nextends VisualSampleGroupEntry('drap') {\n\tunsigned int(3) DRAP_type;\n\tunsigned int(29) reserved = 0;\n}"
    },
    {
      "fourcc": "prol",
      "description": "Audio pre-roll",
      "containers": [
        "sgpd"
      ],
      "type": "AudioSampleGroupEntry",
      "syntax": "class AudioPreRollEntry() extends AudioSampleGroupEntry ('prol')\n{\n\tsigned int(16) roll_distance;\n}"
    },
    {
      "fourcc": "rap ",
      "description": "Random access point",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class VisualRandomAccessEntry() extends VisualSampleGroupEntry ('rap ')\n{\n\tunsigned int(1) num_leading_samples_known;\n\tunsigned int(7) num_leading_samples;\n}"
    },
    {
      "fourcc": "rash",
      "description": "Rate share",
      "containers": [
        "sgpd"
      ],
      "type": "SampleGroupDescriptionEntry",
      "syntax": "class RateShareEntry() extends SampleGroupDescriptionEntry('rash') {\n\tunsigned int(16)\toperation_point_count;\n\tif (operation_point_count == 1) {\n\t\tunsigned int(16)\t\ttarget_rate_share;\n\t}\n\telse {\n\t\tfor (i=0; i < operation_point_count; i++) {\n\t\t\tunsigned int(32)\tavailable_bitrate;\n\t\t\tunsigned int(16)\ttarget_rate_share;\n\t\t}\n\t}\n\tunsigned int(32)\tmaximum_bitrate;\n\tunsigned int(32)\tminimum_bitrate;\n\tunsigned int(8)\tdiscard_priority;\n}"
    },
    {
      "fourcc": "roll",
      "description": "Pre/Post roll group",
      "containers": [
        "sgpd"
      ],
      "type": "AudioSampleGroupEntry",
      "syntax": "class AudioRollRecoveryEntry() extends AudioSampleGroupEntry ('roll')\n{\n\tsigned int(16) roll_distance;\n}"
    },
    {
      "fourcc": "sap ",
      "description": "Stream access point",
      "containers": [
        "sgpd"
      ],
      "type": " SampleGroupDescriptionEntry",
      "syntax": "class SAPEntry() extends  SampleGroupDescriptionEntry('sap ')\n{\n\tunsigned int(1) dependent_flag;\n\tunsigned int(3) reserved;\n\tunsigned int(4) SAP_type;\n}"
    },
    {
      "fourcc": "stmi",
      "description": "SampleToMetadataItemEntry",
      "containers": [
        "sgpd"
      ],
      "type": "SampleGroupDescriptionEntry",
      "syntax": "class SampleToMetadataItemEntry() \nextends SampleGroupDescriptionEntry('stmi') {\n\tunsigned int(32) meta_box_handler_type;\n\tunsigned int(32) num_items;\n\tfor(i = 0; i < num_items; i++) {\n\t\tunsigned int(32) item_id[i];\n\t}\n}"
    },
    {
      "fourcc": "tele",
      "description": "Temporal Level",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class TemporalLevelEntry() extends VisualSampleGroupEntry('tele')\n{\n\tbit(1)\tlevel_independently_decodable;\n\tbit(7)\treserved=0;\n}"
    }
  ]
}