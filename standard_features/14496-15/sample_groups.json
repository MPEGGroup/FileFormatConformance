{
  "description": "Sample group types",
  "entries": [
    {
      "fourcc": "aud ",
      "description": "Access unit delimiter",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class AUDSampleEntry() extends VisualSampleGroupEntry ('aud ')\n{\n\tbit(24) audNalUnit;\n}"
    },
    {
      "fourcc": "avll",
      "description": "AVC layer description group",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class AVCLayerEntry() extends VisualSampleGroupEntry ('avll')\n{\n\tunsigned int(8)  layerNumber;\n\tunsigned int(7)  reserved = 0;\n\tunsigned int(1)  accurateStatisticsFlag;\n\tunsigned int(16) avgBitRate;\n\tunsigned int(16) avgFrameRate;\n}"
    },
    {
      "fourcc": "avss",
      "description": "AVC Sub-sequence group",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class AVCSubSequenceEntry () extends VisualSampleGroupEntry ('avss')\n{\n\t\tunsigned int(16) subSequenceIdentifer;\n\t\tunsigned int(8)  layerNumber; \n\t\tunsigned int(1)  durationFlag;\n\t\tunsigned int(1)  avgRateFlag;\n\t\tunsigned int(6)  reserved = 0; \n\t\tif (durationFlag)\n\t\t\tunsigned int(32) duration;\n\t\tif (avgRateFlag)\n\t\t{\n\t\t\tunsigned int(7)  reserved = 0;\n\t\t\tunsigned int(1)  accurateStatisticsFlag;\n\t\t\tunsigned int(16) avgBitRate;\n\t\t\tunsigned int(16) avgFrameRate;\n\t\t}\n\t\tunsigned int(8) numReferences;\n\t\tDependencyInfo dependency[numReferences];\n\t}\n}"
    },
    {
      "fourcc": "dcfi",
      "description": "VVC decoding capability information",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class DecodingCapabilityInformation extends VisualSampleGroupEntry ('dcfi') {\n\tunsigned int(16) dci_nal_unit_length;\n\tbit(8*dci_nal_unit_length) dci_nal_unit;\n}"
    },
    {
      "fourcc": "dtrt",
      "description": "SVC decode re-timing",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class DecodeRetimingEntry() extends VisualSampleGroupEntry ('dtrt') { \n\tunsigned int(8) tierCount;\n\tfor (i=1; i<=tierCount; i++) {\n\t\tunsigned int(16) tierID;\n\t\tsigned int(16) delta;\n\t}\n}"
    },
    {
      "fourcc": "eob ",
      "description": "End of bitstream",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class EndOfBitstreamSampleEntry() extends VisualSampleGroupEntry ('eob ')\n{\n\tbit(16) eobNalUnit;\n}"
    },
    {
      "fourcc": "eos ",
      "description": "End of sequence",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class EndOfSequenceSampleEntry() extends VisualSampleGroupEntry ('eos ')\n{\n\tunsigned int(8) num_eos_nal_unit_minus1;\n\tfor (i=0; i <= num_eos_nal_unit_minus1; i++)\n\t\tbit(16) eosNalUnit[i];\n}"
    },
    {
      "fourcc": "lbli",
      "description": "HEVC External base layer",
      "containers": [
        "sgpd"
      ],
      "syntax": "aligned(8) class LhvcExternalBaseLayerInfo() extends VisualSampleGroupEntry('lbli')\n{\n\tbit(1) reserved = '1'b;\n\tunsigned int(1) bl_irap_pic_flag;\n\tunsigned int(6) bl_irap_nal_unit_type;\n\tsigned   int(8) sample_offset;\n}",
      "type": "VisualSampleGroupEntry"
    },
    {
      "fourcc": "linf",
      "description": "L-HEVC and VVC layer information",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class LayerInfoGroupEntry extends VisualSampleGroupEntry ('linf') {\n\tbit(2) reserved = 0;\n\tunsigned int(6) num_layers_in_track;\n\tfor (i=0; i<num_layers_in_track; i++) {\n\t\tbit(2) reserved = 0;\n\t\tunsigned int(1) irap_gdr_pics_in_layer_only_flag;\n\t\tunsigned int(1) completeness_flag;\n\t\tunsigned int(6) layer_id;\n\t\tunsigned int(3) min_TemporalId;\n\t\tunsigned int(3) max_TemporalId;\n\t\tbit(1) reserved = 0;\n\t\tunsigned int(7) sub_layer_presence_flags;\n\t}\n}"
    },
    {
      "fourcc": "minp",
      "description": "VVC mixed NAL unit type pictures",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "aligned(8) class VvcMixedNALUnitTypePicEntry() extends VisualSampleGroupEntry('minp')\n{\n\tunsigned int(16) num_mix_nalu_pic_idx;\n\tfor (i = 0; i < num_mix_nalu_pic_idx; i++){\n\t\tunsigned int(16) mix_subp_track_idx1[i];\n\t\tunsigned int(16) mix_subp_track_idx2[i];\n\t}\n\tunsigned int(10) pps_mix_nalu_types_in_pic_bit_pos;\n\tunsigned int(6) pps_id;\n}"
    },
    {
      "fourcc": "mvif",
      "description": "MVC Scalability Information",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class MultiviewGroupEntry() extends VisualSampleGroupEntry ('mvif') { \n\tunsigned int(8) groupID;\n\tunsigned int(8) primary_groupID;\n\tbit(4) reserved = 0;\n\tunsigned int(1) is_tl_switching_point;\n\tbit(3) reserved = 0;\n\tunsigned int(8) tl_switching_distance;\n\t\n\tif (groupID == primary_groupID)\t// primary definition of tier\n\t{\n\t\tViewIdentifierBox();\t\t\t// Mandatory\n\t\tTierInfoBox(); \t\t\t\t// Mandatory\n\t\tTierDependencyBox(); \t\t// Mandatory\n\t\tPriorityRangeBox();\t\t\t// Mandatory\n\n\t\t//Optional Boxes or fields may follow when defined later\n\t\tTierBitRateBox();\t\t\t\t\t\t// optional\n\t\tBufferingBox();\t\t\t\t\t\t// optional\n\t\tInitialParameterSetBox();\t\t\t// optional\n\t\tProtectionSchemeInfoBox();\t\t\t// optional\n\t\tViewPriorityBox();\t\t\t\t\t// optional\n\t}\n}"
    },
    {
      "fourcc": "nalm",
      "description": "NAL unit map entry",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class NALUMapEntry() extends VisualSampleGroupEntry ('nalm') {\n\tbit(6) reserved = 0;\n\tunsigned int(1) large_size;\n\tunsigned int(1) rle;\n\tif (large_size) {\n\t\tunsigned int(16) entry_count;\n\t} else {\n\t\tunsigned int(8) entry_count;\n\t}\n\tfor (i=1; i<= entry_count; i++) {\n\t\tif (rle) {\n\t\t\tif (large_size) {\n\t\t\t\tunsigned int(16) NALU_start_number;\n\t\t\t} else {\n\t\t\t\tunsigned int(8) NALU_start_number;\n\t\t\t}\n\t\t}\n\t\tunsigned int(16) groupID;\n\t}\n}"
    },
    {
      "fourcc": "oinf",
      "description": "L-HEVC operating points information",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class OperatingPointsInformation extends VisualSampleGroupEntry ('oinf') {\n\tOperatingPointsRecord oinf;\n}"
    },
    {
      "fourcc": "opth",
      "description": "L-HEVC and VVC Operating Point Decode Time Hint",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class OperatingPointDecodeTimeHint()\nextends VisualSampleGroupEntry (\u2019opth\u2019)\n{\n\tsigned int(32) delta_time;\n}\n"
    },
    {
      "fourcc": "pase",
      "description": "Parameter set",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class ParameterSetNALUEntry() extends VisualSampleGroupEntry ('pase')\n{\n\tunsigned int(16) ps_nalu_length;\n\tbit(8* ps_nalu_length) ps_nal_unit;\n}"
    },
    {
      "fourcc": "pss1",
      "description": "In-band parameter set indication",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class PSSampleGroupEntry() extends VisualSampleGroupEntry ('pss1')\n{\n\tunsigned int(1) sps_present;\n\tunsigned int(1) pps_present;\n\tunsigned int(1) aps_present;\n\tbit(5) reserved = 0;\n}"
    },
    {
      "fourcc": "rror",
      "description": "Rectangular region order",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "aligned(8) class VvcRectRegionOrderEntry () extends VisualSampleGroupEntry(\u2018rror')\n{\n\tunsigned int(1) subpic_id_info_flag;\n\tbit(7) reserved = 0;\n\tunsigned int(16) num_alternate_region_set;\n\tfor (i = 0; i < num_alternate_region_set; i++) {\n\t\tunsigned int(16) num_regions_in_set[i];\n\t\tunsigned int(16) alternate_region_set_id[i];\n\t\tfor (j = 0; j < num_regions_in_set[i]; j++)\n\t\t\tunsigned int(16) groupID[i][j];\n\t}\n\tunsigned int(16) num_regions_minus1;\n\tfor (i = 0; i < num_regions_minus1; i++)\n\t\tunsigned int(16) region_id[i];\n\tif (subpic_id_info_flag)\n\t\tVVCSubpicIDRewritingInfomationStruct() subpic_id_rewriting_info;\n}"
    },
    {
      "fourcc": "scif",
      "description": "SVC Scalability Information",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class ScalableGroupEntry() extends VisualSampleGroupEntry ('scif') { \n\tunsigned int(8) groupID;\n\tunsigned int(8) primary_groupID;\n\tunsigned int(1) is_tier_IDR;\n\tunsigned int(1) noInterLayerPredFlag; \n\tunsigned int(1) useRefBasePicFlag;\n\tunsigned int(1) storeBaseRepFlag; \n\tunsigned int(1) is_tl_switching_point;\n\tbit(3) reserved = 0;\n\tunsigned int(8) tl_switching_distance;\n\t\n\tif (groupID == primary_groupID)\t// primary definition of tier\n\t{\n\t\tTierInfoBox(); \t\t\t\t// Mandatory\n\t\tSVCDependencyRangeBox();\t// Mandatory\n\t\tPriorityRangeBox();\t\t\t// Mandatory\n\n\t\t//Optional Boxes or fields may follow when defined later\n\t\tTierBitRateBox();\t\t\t\t\t\t// optional\n\t\tRectRegionBox();\t\t\t\t\t\t// optional\n\t\tBufferingBox();\t\t\t\t\t\t// optional\n\t\tTierDependencyBox(); \t\t\t\t// optional\n\t\tInitialParameterSetBox();\t\t\t// optional\n\t\tIroiInfoBox();\t\t\t\t\t\t\t// optional\n\t\tProtectionSchemeInfoBox();\t\t\t// optional\n\t\tTranscodingInfoBox();\t\t\t\t// optional\n\t}\n}"
    },
    {
      "fourcc": "scnm",
      "description": "AVC/SVC/MVC map groups",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class ScalableNALUMapEntry() extends VisualSampleGroupEntry ('scnm') { \n\tbit(8) reserved = 0;\n\tunsigned int(8) NALU_count;\n\tfor (i=1; i<= NALU_count; i++)\n\t\tunsigned int(8) groupID;\n\t}\n}"
    },
    {
      "fourcc": "spid",
      "description": "VVC subpicture ID",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "aligned(8) class VvcSubpicIDEntry() extends VisualSampleGroupEntry('spid')\n{\n\tunsigned int(1) rect_region_flag;\n\tbit(2) reserved = 0;\n\tunsigned int(1) continuous_id_flag;\n\tunsigned int(12) num_subpics_minus1;\n\tfor (i = 0; i <= num_subpics_minus1; i++) {\n\t\tif ((continuous_id_flag && i == 0) || !continuous_id_flag)\n\t\t\tunsigned int(16) subpic_id[i];\n\t\tif (rect_region_flag)\n\t\t\tunsigned int(16) groupID[i];\n\t}\n}"
    },
    {
      "fourcc": "spli",
      "description": "VVC subpicture level information",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "aligned(8) class SubpicLevelInfoEntry() extends VisualSampleGroupEntry('spli')\n{\n\tunsigned int(8) level_idc;\n}"
    },
    {
      "fourcc": "spor",
      "description": "VVC subpicture order",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "aligned(8) class VvcSubpicOrderEntry() extends VisualSampleGroupEntry('spor')\n{\n\tunsigned int(1) subpic_id_info_flag;\n\tunsigned int(15) num_subpic_ref_idx;\n\tfor (i = 0; i < num_subpic_ref_idx; i++)\n\t\tunsigned int(16) subp_track_ref_idx[i];\n\tif (subpic_id_info_flag)\n\t\tVVCSubpicIDRewritingInfomationStruct() subpic_id_rewriting_info;\n}"
    },
    {
      "fourcc": "stsa",
      "description": "Step-wise Temporal Layer",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class StepwiseTemporalLayerEntry() extends VisualSampleGroupEntry ('stsa')\n{\n}"
    },
    {
      "fourcc": "sulm",
      "description": "VVC subpicture layout",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class VvcSubpicLayoutMapEntry() extends VisualSampleGroupEntry ('sulm') {\n\tunsigned int(32) groupID_info_4cc;\n\tunsigned int(16) entry_count_minus1;\n\tfor(i=0; i <= entry_count_minus1; i++)\n\t\tunsigned int(16) groupID;\n}"
    },
    {
      "fourcc": "sync",
      "description": "Sync sample groups",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class SyncSampleEntry() extends VisualSampleGroupEntry ('sync')\n{\n\t\tbit(2) reserved = 0;\n\t\tunsigned int(6) NAL_unit_type;\n}"
    },
    {
      "fourcc": "trif",
      "description": "HEVC Tile Region",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class RectangularRegionGroupEntry() extends VisualSampleGroupEntry ('trif')\n{\n\tunsigned int(16) groupID;\n\tunsigned int(1) rect_region_flag;\n\tif (!rect_region_flag)\n\t\tbit(7)  reserved = 0;\n\telse {\n\t\tunsigned int(2) independent_idc;\n\t\tunsigned int(1) full_picture;\n\t\tunsigned int(1) filtering_disabled;\n\t\tunsigned int(1) has_dependency_list;\n\t\tbit(2)  reserved = 0;\n\t\tif (!full_picture) {\n\t\t\tunsigned int(16) horizontal_offset;\n\t\t\tunsigned int(16) vertical_offset;\n\t\t}\n\t\tunsigned int(16) region_width;\n\t\tunsigned int(16) region_height;\n\t\tif (has_dependency_list) {\n\t\t\tunsigned int(16) dependency_rect_region_count;\n\t\t\tfor (i=1; i<= dependency_rect_region_count; i++)\n\t\t\t\tunsigned int(16) dependencyRectRegionGroupID;\n\t}\n}"
    },
    {
      "fourcc": "tsas",
      "description": "Temporal Sub-Layer",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class TemporalSubLayerEntry() extends VisualSampleGroupEntry ('tsas')\n{\n}"
    },
    {
      "fourcc": "tscl",
      "description": "Temporal Layer",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class TemporalLayerEntry() extends VisualSampleGroupEntry ('tscl')\n{\n\tunsigned int(8)  temporalLayerId;\n\tunsigned int(2)  tlprofile_space;\n\tunsigned int(1)  tltier_flag;\n\tunsigned int(5)  tlprofile_idc;\n\tunsigned int(32) tlprofile_compatibility_flags;\n\tunsigned int(48) tlconstraint_indicator_flags;\n\tunsigned int(8)  tllevel_idc;\n\tunsigned int(16) tlMaxBitRate;\n\tunsigned int(16) tlAvgBitRate;\n\tunsigned int(8)  tlConstantFrameRate;\n\tunsigned int(16) tlAvgFrameRate;\n}"
    },
    {
      "fourcc": "vipr",
      "description": "View priority",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class ViewPriorityEntry() extends VisualSampleGroupEntry ('vipr')\n{\n\tViewPriorityBox();\n}"
    },
    {
      "fourcc": "vopi",
      "description": "VVC operating points information",
      "containers": [
        "sgpd"
      ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class VvcOperatingPointsInformation extends VisualSampleGroupEntry ('vopi') {\n\tVvcOperatingPointsRecord oinf;\n}"
    }
  ]
}